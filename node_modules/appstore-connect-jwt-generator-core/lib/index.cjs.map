{"version":3,"sources":["../src/cjs/index.cts"],"names":[],"mappings":";;;;QAgBgB,SAAS,GAAT,SAAS;QAOH,KAAK,GAAL,KAAK;;AAvBX,IAAA,aAAc,kCAAd,cAAc,EAAA;;;;;;AAE9B,MAAM,UAAU,GAAG,CACjB,QAAgB,EAChB,YAAoB,EACpB,QAAgB,GACK,CAAA;QACrB,SAAS,EAAE,OAAO;QAClB,KAAK,EAAE,YAAY;QACnB,QAAQ,EAAE,oBAAoB;QAC9B,SAAS,EAAE,QAAQ;QACnB,MAAM,EAAE,QAAQ;KACjB,CAAA;AAAE;AAEH,SAAS,UAAU,GAAG,EAAG;AAElB,SAAS,SAAS,CACvB,UAA2B,EAC3B,QAAgB,EAChB,YAAoB,EACpB,QAAgB,GAAG,GAAG,EACd;IAAE,OAAO,aAAG,QAAA,CAAC,IAAI,mBAJzB,UAA2B,EAIe,UAAU,CAHpD,QAAgB,EAChB,YAAoB,EACpB,QAAgB,CACsE,CAAC,CAAC;CAAE;AAErF,eAAe,KAAK,CACzB,UAA2B,EAC3B,QAAgB,EAChB,YAAoB,EACpB,QAAgB,GAAG,GAAG,EACL;IACjB,OAAO,OAAO,CAAC,OAAO,CACpB,aAAG,QAAA,CAAC,IAAI,mBANV,UAA2B,EAMA,UAAU,CALrC,QAAgB,EAChB,YAAoB,EACpB,QAAgB,CAGuD,CAAC,CACvE,CAAC;CACH;AAED,UAAU,CAAC,SAAS,GAAG,SAAS,CAAC;AACjC,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;AAEzB,MAAM,CAAC,OAAO,GAAG,OAAO,GAAG,UAAU,CAAC;eAEvB,UAAU","file":"index.cjs","sourcesContent":["import jwt from 'jsonwebtoken';\n\nconst signOption = (\n  issuerId: string,\n  privateKeyId: string,\n  duration: number,\n): jwt.SignOptions => ({\n  algorithm: 'ES256',\n  keyid: privateKeyId,\n  audience: 'appstoreconnect-v1',\n  expiresIn: duration,\n  issuer: issuerId,\n});\n\nfunction jwtGenCore() { }\n\nexport function tokenSync(\n  privateKey: string | Buffer,\n  issuerId: string,\n  privateKeyId: string,\n  duration: number = 500,\n): string { return jwt.sign({}, privateKey, signOption(issuerId, privateKeyId, duration)); };\n\nexport async function token(\n  privateKey: string | Buffer,\n  issuerId: string,\n  privateKeyId: string,\n  duration: number = 500,\n): Promise<string> {\n  return Promise.resolve(\n    jwt.sign({}, privateKey, signOption(issuerId, privateKeyId, duration))\n  );\n};\n\njwtGenCore.tokenSync = tokenSync;\njwtGenCore.token = token;\n\nmodule.exports = exports = jwtGenCore;\n\nexport default jwtGenCore;\n"]}