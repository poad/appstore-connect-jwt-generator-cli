{"version":3,"sources":["../src/esm/index.mts"],"names":[],"mappings":"OAAO,GAAG,MAAM,cAAc,CAAC;AAE/B,MAAM,UAAU,GAAG,CACjB,QAAgB,EAChB,YAAoB,EACpB,QAAgB,GACI,CAAC;QACrB,SAAS,EAAE,OAAO;QAClB,KAAK,EAAE,YAAY;QACnB,QAAQ,EAAE,oBAAoB;QAC9B,SAAS,EAAE,QAAQ;QACnB,MAAM,EAAE,QAAQ;KACjB,CAAC;AAAC;AAEH,SAAS,UAAU,GAAG,EAAE;AAExB,OAAO,SAAS,SAAS,CACvB,UAA2B,EAC3B,QAAgB,EAChB,YAAoB,EACpB,QAAgB,GAAG,GAAG,EACd;IAAE,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,UAAU,EAAE,UAAU,CAAC,QAAQ,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC,CAAC;CAAE;AAE5F,OAAO,eAAe,KAAK,CACzB,UAA2B,EAC3B,QAAgB,EAChB,YAAoB,EACpB,QAAgB,GAAG,GAAG,EACL;IACjB,OAAO,OAAO,CAAC,OAAO,CACpB,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,UAAU,EAAE,UAAU,CAAC,QAAQ,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC,CACvE,CAAC;CACH;AAED,UAAU,CAAC,SAAS,GAAG,SAAS,CAAC;AACjC,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;AAEzB,eAAe,UAAU,CAAC","file":"index.mjs","sourcesContent":["import jwt from 'jsonwebtoken';\n\nconst signOption = (\n  issuerId: string,\n  privateKeyId: string,\n  duration: number,\n): jwt.SignOptions => ({\n  algorithm: 'ES256',\n  keyid: privateKeyId,\n  audience: 'appstoreconnect-v1',\n  expiresIn: duration,\n  issuer: issuerId,\n});\n\nfunction jwtGenCore() {}\n\nexport function tokenSync(\n  privateKey: string | Buffer,\n  issuerId: string,\n  privateKeyId: string,\n  duration: number = 500,\n): string { return jwt.sign({}, privateKey, signOption(issuerId, privateKeyId, duration)); };\n\nexport async function token(\n  privateKey: string | Buffer,\n  issuerId: string,\n  privateKeyId: string,\n  duration: number = 500,\n): Promise<string> {\n  return Promise.resolve(\n    jwt.sign({}, privateKey, signOption(issuerId, privateKeyId, duration))\n  );\n};\n\njwtGenCore.tokenSync = tokenSync;\njwtGenCore.token = token;\n\nexport default jwtGenCore;\n"]}