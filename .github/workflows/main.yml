name: Node.js modules auto update
 
on:
  push:
    branches:    
    - main 
  schedule:
    - cron:  '0 0 * * *'

  workflow_dispatch:

jobs:
  auto_update:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - uses: docker://node:lts-buster-slim

    - name: update and test
      uses: poad/update-node-modules@v1
      with:
        yarn: true

    - name: update and test
      env:
        APPSTORE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
        APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
        APPSTORE_PRIVATE_KEY: ${{ secrets.APPSTORE_PRIVATE_KEY }}
        APPSTORE_PRIVATE_KEY_FILE_PATH: '/tmp/privateKey.p8'
        NODE_ENV: test
      run: |
        echo ${APPSTORE_PRIVATE_KEY} | base64 -d > ${APPSTORE_PRIVATE_KEY_FILE_PATH}
        echo "" >> ${APPSTORE_PRIVATE_KEY_FILE_PATH}
        sudo rm -rf dist && \
        yarn install && \
        yarn build && \
        yarn test && \
        rm -rf coverage node_modules

    - name: Commit files
      run: |
        git config --local user.email "ken-yo@mbr.nifty.com"
        git config --local user.name "Kenji Saito"
        TIMESTAMP=$(date)
        BRANCH_NAME="feature/bump-modules-$(date "+%Y%m%d-%H%M%S")"
        git checkout -b "${BRANCH_NAME}"
        if [ $(git diff | wc -l) -eq 0 ]; then
          echo "CHANGE_STATE=no_changed" >> $GITHUB_ENV
          exit 0
        fi
        git add *
        git commit -m "Auto update at ${TIMESTAMP}"
        echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
        echo "TIMESTAMP=${TIMESTAMP}" >> $GITHUB_ENV
        echo "CHANGE_STATE=changed" >> $GITHUB_ENV

    - name: Push Changes
      if: success() && env.CHANGE_STATE == 'changed'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.PERSONAL_TOKEN_FOR_GITHUB_ACTIONS }}
        branch: ${{ env.BRANCH_NAME }}

    - name: Prepare create pull request
      run: |
        repo=$(echo "${{ github.repository }}" | cut -d'/' -f2)
        echo "REPO_NAME=${repo}" >> $GITHUB_ENV

    - name: Create pull request
      id: create-pull-request
      if: success() && env.CHANGE_STATE == 'changed'
      uses: poad/github-pull-requester@v1.0.0
      with:
        head_branch: ${{ env.BRANCH_NAME }}
        title: ${{ format('Auto update at {0}', env.TIMESTAMP) }}
        body: ${{ format('Update the modules at {0}', env.TIMESTAMP) }}
        github_token: ${{ secrets.PERSONAL_TOKEN_FOR_GITHUB_ACTIONS }}
        repository: ${{ env.REPO_NAME }}
        owner: ${{ github.repository_owner }}

    - name: Extract response
      env:
        RESULT: ${{ steps.create-pull-request.outputs.result }}
        RESULT_JSON: ${{ toJSON(steps.create-pull-request.outputs.result) }}
      run: |
        PULL_REQUEST_HTML_URL=$(echo ${RESULT} | jq -r .data.html_url)
        echo "PULL_REQUEST_HTML_URL=${PULL_REQUEST_HTML_URL}" >> $GITHUB_ENV
        PULL_REQUEST_NUMBER=$(echo ${RESULT} | jq -r .data.number)
        echo "PULL_REQUEST_NUMBER=${PULL_REQUEST_NUMBER}" >> $GITHUB_ENV
        PULL_REQUEST_ID=$(echo ${RESULT} | jq -r .data.node_id)
        echo "PULL_REQUEST_ID=${PULL_REQUEST_ID}" >> $GITHUB_ENV

    - name: Send result with Pull Request
      if: success() && env.CHANGE_STATE == 'changed'
      uses: slackapi/slack-github-action@v1.15.0
      with:
        payload: "{ \"text\": \"${{ env.SLACKK_PAYLOAD }}\" }"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACKK_PAYLOAD: ${{ format('{0} {1}\nPull Request <{2}>', github.workflow, job.status, env.PULL_REQUEST_HTML_URL) }}

    - name: Send result without Pull Request
      if: success() && env.CHANGE_STATE != 'changed'
      uses: slackapi/slack-github-action@v1.15.0
      with:
        payload: "{ \"text\": \"${{ env.SLACKK_PAYLOAD }}\" }"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACKK_PAYLOAD: ${{ format('{0} {1}', github.workflow, job.status) }}

    - name: Pull request auto merge enabler
      if: success() && env.CHANGE_STATE == 'changed'
      uses: poad/github-pull-request-auto-merge-enable-action@v1.0.0
      with:
        pull_request_id: ${{ env.PULL_REQUEST_ID }}
        github_token: ${{ secrets.PERSONAL_TOKEN_FOR_GITHUB_ACTIONS }}
        repository: ${{ github.event.repository.name }}
        owner: ${{ github.repository_owner }}
        merge_method: SQUASH
